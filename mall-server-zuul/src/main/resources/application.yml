server:
  port: 8001
spring:
  zipkin:
    #配置zipkin发送类型为kafka
    sender:
      type: kafka
    kafka:
      topic: zipkin
  kafka:
    bootstrap-servers: ${KAFKA_IP:192.168.75.128:9092}
    producer:
      bootstrap-servers: ${KAFKA_IP:192.168.75.128:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: ${RABBITMQ_HOST:192.168.75.128}
    port: ${RABBITMQ_PORT:5672}
    username: "admin"
    password: "123456"
  security:
    user:
      name: "admin"
      password: "123456"
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: ${EUREKA_URL:http://admin:123456@192.168.75.128:8000/eureka/}

feign:
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true
#hystrix的超时时间
hystrix:
  threadpool:
    default:
      #并发执行的最大线程数，默认10
      coreSize: 1000
      #BlockingQueue的最大队列数
      maxQueueSize: 1000
      #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 240000
#ribbon的超时时间
ribbon:
  ReadTimeout: 6000
  ConnectTimeout: 6000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

#使用log4j2
logging:
  config: classpath:log4j2.xml

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS